// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_conteiner.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message_conteiner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace container {

namespace {

const ::google::protobuf::Descriptor* MessageContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageContainer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageCapsule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageCapsule_reflection_ = NULL;
const ::google::protobuf::Descriptor* Items_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Items_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_5fconteiner_2eproto() {
  protobuf_AddDesc_message_5fconteiner_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message_conteiner.proto");
  GOOGLE_CHECK(file != NULL);
  MessageContainer_descriptor_ = file->message_type(0);
  static const int MessageContainer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, capsules_),
  };
  MessageContainer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageContainer_descriptor_,
      MessageContainer::default_instance_,
      MessageContainer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageContainer));
  MessageCapsule_descriptor_ = file->message_type(1);
  static const int MessageCapsule_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCapsule, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCapsule, data_),
  };
  MessageCapsule_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageCapsule_descriptor_,
      MessageCapsule::default_instance_,
      MessageCapsule_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCapsule, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCapsule, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageCapsule));
  Items_descriptor_ = file->message_type(2);
  static const int Items_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, packages_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, parameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, items_),
  };
  Items_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Items_descriptor_,
      Items::default_instance_,
      Items_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Items));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_5fconteiner_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageContainer_descriptor_, &MessageContainer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageCapsule_descriptor_, &MessageCapsule::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Items_descriptor_, &Items::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_5fconteiner_2eproto() {
  delete MessageContainer::default_instance_;
  delete MessageContainer_reflection_;
  delete MessageCapsule::default_instance_;
  delete MessageCapsule_reflection_;
  delete Items::default_instance_;
  delete Items_reflection_;
}

void protobuf_AddDesc_message_5fconteiner_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_types_2eproto();
  ::groups::protobuf_AddDesc_group_2eproto();
  ::user::protobuf_AddDesc_user_2eproto();
  ::package::protobuf_AddDesc_package_2eproto();
  ::parameters::protobuf_AddDesc_parameters_2eproto();
  ::item::protobuf_AddDesc_item_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027message_conteiner.proto\022\tcontainer\032\013ty"
    "pes.proto\032\013group.proto\032\nuser.proto\032\rpack"
    "age.proto\032\020parameters.proto\032\nitem.proto\""
    "\?\n\020MessageContainer\022+\n\010capsules\030\001 \003(\0132\031."
    "container.MessageCapsule\"9\n\016MessageCapsu"
    "le\022\031\n\007msgType\030\002 \002(\0162\010.MsgType\022\014\n\004data\030\003 "
    "\002(\014\"\273\001\n\005Items\022\035\n\006groups\030\001 \003(\0132\r.groups.G"
    "roup\022)\n\005users\030\002 \003(\0132\032.user.UserBasicInfo"
    "rmation\022\"\n\010packages\030\003 \003(\0132\020.package.Pack"
    "age\022)\n\nparameters\030\004 \003(\0132\025.parameters.Par"
    "ameter\022\031\n\005items\030\005 \003(\0132\n.item.ItemP\000P\001P\002P"
    "\003P\004P\005", 445);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_conteiner.proto", &protobuf_RegisterTypes);
  MessageContainer::default_instance_ = new MessageContainer();
  MessageCapsule::default_instance_ = new MessageCapsule();
  Items::default_instance_ = new Items();
  MessageContainer::default_instance_->InitAsDefaultInstance();
  MessageCapsule::default_instance_->InitAsDefaultInstance();
  Items::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_5fconteiner_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_5fconteiner_2eproto {
  StaticDescriptorInitializer_message_5fconteiner_2eproto() {
    protobuf_AddDesc_message_5fconteiner_2eproto();
  }
} static_descriptor_initializer_message_5fconteiner_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MessageContainer::kCapsulesFieldNumber;
#endif  // !_MSC_VER

MessageContainer::MessageContainer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MessageContainer::InitAsDefaultInstance() {
}

MessageContainer::MessageContainer(const MessageContainer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MessageContainer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageContainer::~MessageContainer() {
  SharedDtor();
}

void MessageContainer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageContainer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageContainer_descriptor_;
}

const MessageContainer& MessageContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_5fconteiner_2eproto();
  return *default_instance_;
}

MessageContainer* MessageContainer::default_instance_ = NULL;

MessageContainer* MessageContainer::New() const {
  return new MessageContainer;
}

void MessageContainer::Clear() {
  capsules_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .container.MessageCapsule capsules = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_capsules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_capsules()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_capsules;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MessageContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .container.MessageCapsule capsules = 1;
  for (int i = 0; i < this->capsules_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->capsules(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MessageContainer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .container.MessageCapsule capsules = 1;
  for (int i = 0; i < this->capsules_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->capsules(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MessageContainer::ByteSize() const {
  int total_size = 0;

  // repeated .container.MessageCapsule capsules = 1;
  total_size += 1 * this->capsules_size();
  for (int i = 0; i < this->capsules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->capsules(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageContainer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageContainer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageContainer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageContainer::MergeFrom(const MessageContainer& from) {
  GOOGLE_CHECK_NE(&from, this);
  capsules_.MergeFrom(from.capsules_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageContainer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageContainer::CopyFrom(const MessageContainer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageContainer::IsInitialized() const {

  for (int i = 0; i < capsules_size(); i++) {
    if (!this->capsules(i).IsInitialized()) return false;
  }
  return true;
}

void MessageContainer::Swap(MessageContainer* other) {
  if (other != this) {
    capsules_.Swap(&other->capsules_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageContainer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageContainer_descriptor_;
  metadata.reflection = MessageContainer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageCapsule::kMsgTypeFieldNumber;
const int MessageCapsule::kDataFieldNumber;
#endif  // !_MSC_VER

MessageCapsule::MessageCapsule()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MessageCapsule::InitAsDefaultInstance() {
}

MessageCapsule::MessageCapsule(const MessageCapsule& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MessageCapsule::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageCapsule::~MessageCapsule() {
  SharedDtor();
}

void MessageCapsule::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void MessageCapsule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageCapsule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageCapsule_descriptor_;
}

const MessageCapsule& MessageCapsule::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_5fconteiner_2eproto();
  return *default_instance_;
}

MessageCapsule* MessageCapsule::default_instance_ = NULL;

MessageCapsule* MessageCapsule::New() const {
  return new MessageCapsule;
}

void MessageCapsule::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgtype_ = 1;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageCapsule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgType msgType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // required bytes data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MessageCapsule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .MsgType msgType = 2;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // required bytes data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MessageCapsule::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgType msgType = 2;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // required bytes data = 3;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MessageCapsule::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgType msgType = 2;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // required bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageCapsule::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageCapsule* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageCapsule*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageCapsule::MergeFrom(const MessageCapsule& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageCapsule::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageCapsule::CopyFrom(const MessageCapsule& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageCapsule::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MessageCapsule::Swap(MessageCapsule* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageCapsule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageCapsule_descriptor_;
  metadata.reflection = MessageCapsule_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Items::kGroupsFieldNumber;
const int Items::kUsersFieldNumber;
const int Items::kPackagesFieldNumber;
const int Items::kParametersFieldNumber;
const int Items::kItemsFieldNumber;
#endif  // !_MSC_VER

Items::Items()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Items::InitAsDefaultInstance() {
}

Items::Items(const Items& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Items::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Items::~Items() {
  SharedDtor();
}

void Items::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Items::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Items::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Items_descriptor_;
}

const Items& Items::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_5fconteiner_2eproto();
  return *default_instance_;
}

Items* Items::default_instance_ = NULL;

Items* Items::New() const {
  return new Items;
}

void Items::Clear() {
  groups_.Clear();
  users_.Clear();
  packages_.Clear();
  parameters_.Clear();
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Items::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .groups.Group groups = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_groups()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_groups;
        if (input->ExpectTag(18)) goto parse_users;
        break;
      }

      // repeated .user.UserBasicInformation users = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_users:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_users()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_users;
        if (input->ExpectTag(26)) goto parse_packages;
        break;
      }

      // repeated .package.Package packages = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_packages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_packages()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_packages;
        if (input->ExpectTag(34)) goto parse_parameters;
        break;
      }

      // repeated .parameters.Parameter parameters = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_parameters;
        if (input->ExpectTag(42)) goto parse_items;
        break;
      }

      // repeated .item.Item items = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Items::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .groups.Group groups = 1;
  for (int i = 0; i < this->groups_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->groups(i), output);
  }

  // repeated .user.UserBasicInformation users = 2;
  for (int i = 0; i < this->users_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->users(i), output);
  }

  // repeated .package.Package packages = 3;
  for (int i = 0; i < this->packages_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->packages(i), output);
  }

  // repeated .parameters.Parameter parameters = 4;
  for (int i = 0; i < this->parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->parameters(i), output);
  }

  // repeated .item.Item items = 5;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Items::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .groups.Group groups = 1;
  for (int i = 0; i < this->groups_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->groups(i), target);
  }

  // repeated .user.UserBasicInformation users = 2;
  for (int i = 0; i < this->users_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->users(i), target);
  }

  // repeated .package.Package packages = 3;
  for (int i = 0; i < this->packages_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->packages(i), target);
  }

  // repeated .parameters.Parameter parameters = 4;
  for (int i = 0; i < this->parameters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->parameters(i), target);
  }

  // repeated .item.Item items = 5;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Items::ByteSize() const {
  int total_size = 0;

  // repeated .groups.Group groups = 1;
  total_size += 1 * this->groups_size();
  for (int i = 0; i < this->groups_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groups(i));
  }

  // repeated .user.UserBasicInformation users = 2;
  total_size += 1 * this->users_size();
  for (int i = 0; i < this->users_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->users(i));
  }

  // repeated .package.Package packages = 3;
  total_size += 1 * this->packages_size();
  for (int i = 0; i < this->packages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->packages(i));
  }

  // repeated .parameters.Parameter parameters = 4;
  total_size += 1 * this->parameters_size();
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameters(i));
  }

  // repeated .item.Item items = 5;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Items::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Items* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Items*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Items::MergeFrom(const Items& from) {
  GOOGLE_CHECK_NE(&from, this);
  groups_.MergeFrom(from.groups_);
  users_.MergeFrom(from.users_);
  packages_.MergeFrom(from.packages_);
  parameters_.MergeFrom(from.parameters_);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Items::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Items::CopyFrom(const Items& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Items::IsInitialized() const {

  for (int i = 0; i < groups_size(); i++) {
    if (!this->groups(i).IsInitialized()) return false;
  }
  for (int i = 0; i < users_size(); i++) {
    if (!this->users(i).IsInitialized()) return false;
  }
  for (int i = 0; i < packages_size(); i++) {
    if (!this->packages(i).IsInitialized()) return false;
  }
  for (int i = 0; i < parameters_size(); i++) {
    if (!this->parameters(i).IsInitialized()) return false;
  }
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void Items::Swap(Items* other) {
  if (other != this) {
    groups_.Swap(&other->groups_);
    users_.Swap(&other->users_);
    packages_.Swap(&other->packages_);
    parameters_.Swap(&other->parameters_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Items::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Items_descriptor_;
  metadata.reflection = Items_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace container

// @@protoc_insertion_point(global_scope)
